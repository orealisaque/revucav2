# Generated by Django 5.1.5 on 2025-01-20 09:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
                ('css_class', models.CharField(max_length=100)),
                ('required_reviews', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('sigla', models.CharField(max_length=2)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('user_type', models.CharField(choices=[('acompanhante', 'Acompanhante'), ('cliente', 'Cliente')], default='cliente', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='users/fotos/')),
                ('whatsapp', models.CharField(blank=True, help_text='Digite apenas números', max_length=20)),
                ('bio', models.TextField(blank=True, help_text='Máximo de 200 caracteres', max_length=200, verbose_name='Biografia')),
                ('instagram', models.CharField(blank=True, help_text='Digite apenas seu nome de usuário, sem @ (opcional)', max_length=30)),
                ('plano', models.CharField(choices=[('free', 'Gratuito'), ('vip', 'VIP')], default='free', max_length=10)),
                ('plano_expira_em', models.DateTimeField(blank=True, null=True)),
                ('is_vip', models.BooleanField(default=False, help_text='Indica se o usuário tem plano VIP ativo', verbose_name='VIP')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.cidade')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.estado')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'swappable': 'AUTH_USER_MODEL',
            },
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.estado'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 estrela'), (2, '2 estrelas'), (3, '3 estrelas'), (4, '4 estrelas'), (5, '5 estrelas')])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_given', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AcompanhanteProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_artistico', models.CharField(max_length=100)),
                ('bio', models.TextField(max_length=500)),
                ('foto_perfil', models.ImageField(upload_to='acompanhantes/fotos/')),
                ('idade', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acompanhantes', to='users.cidade')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acompanhantes', to='users.estado')),
            ],
            options={
                'verbose_name': 'Perfil de Acompanhante',
                'verbose_name_plural': 'Perfis de Acompanhantes',
                'indexes': [models.Index(fields=['nome_artistico'], name='users_acomp_nome_ar_1f4825_idx'), models.Index(fields=['idade'], name='users_acomp_idade_e3dabd_idx'), models.Index(fields=['cidade'], name='users_acomp_cidade__68795a_idx'), models.Index(fields=['estado'], name='users_acomp_estado__65715e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='users_custo_email_c80f75_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['user_type'], name='users_custo_user_ty_f25e6c_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['cidade'], name='users_custo_cidade__827b0b_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['estado'], name='users_custo_estado__a7d3bc_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['plano'], name='users_custo_plano_21b455_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_vip'], name='users_custo_is_vip_42ff08_idx'),
        ),
    ]
